#!/usr/bin/env python
# license removed for brevity
# ROS
import rospy
import random as r
from std_msgs.msg import String
from std_msgs.msg import Int32

class ChessAlgorithm(object):
    
    def __init__(self):
        rospy.init_node('command_reader')
        self.msg = '00'
        while not rospy.is_shutdown():

            
            # Subscribers
            rospy.Subscriber('chess/position', String, self.make_move)

            # Publishers
            self.pub = rospy.Publisher('chess/location', String, queue_size = 10)
            self.pub.publish(self.msg)

            self.pubIsGood = rospy.Publisher('chess/is_command_good', String, queue_size = 10)
            self.find_command()
            self.pubIsGood.publish(str(self.command))

            #self.pub_col = rospy.Publisher('chess/new_column', Int32, queue_size = 10)
            #self.pub_row = rospy.Publisher('chess/new_row', Int32, queue_size = 10)
            #self.pub_col.publish(self.col)
            #self.pub_col.publish(self.row)
            
            rospy.Rate(1).sleep()
    
    def make_move(self, position):
        self.row = 2
        self.col = 6
        
        self.msg = str(self.row) + str(self.col)

    def find_command(self):
        self.command = 0

if __name__ == '__main__':
    ChessAlgorithm()